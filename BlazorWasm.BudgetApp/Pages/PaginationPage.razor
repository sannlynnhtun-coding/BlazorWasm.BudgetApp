<nav>
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPageNo == 1 ? "disabled" : "")">
            <a @onclick="() => BudgetData(Model.CurrentPageNo - 1)" class="page-link" href="javascript:void(0)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        @{
            bool firstDesign = Model.CurrentPageNo <= 3 || Model.CurrentPageNo >= Model.TotalPageNo - 2;
            bool secondDesign = !firstDesign;
        }
        @if (firstDesign)
        {
            @*<< 1 2 3 4 ... 38 39 40 >>*@
            int leftEndPageNo = 4;
            bool rightEndPageNoExist = Model.TotalPageNo - 3 > leftEndPageNo;
            if (!rightEndPageNoExist)
            {
                leftEndPageNo = Model.TotalPageNo;
            }
            @for (int i = 1; i <= leftEndPageNo; i++)
            {
                if (i == Model.CurrentPageNo)
                {
                    <li class="page-item active">
                        <a class="page-link" href="javascript:void(0)">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item" data-item="@i">
                        <a @onclick="() => BudgetData(i)" class="page-link" href="javascript:void(0)">@i</a>
                    </li>
                }
            }
            @if (rightEndPageNoExist)
            {
                <li class="page-item">
                    <a class="page-link" href="javascript:void(0)">...</a>
                </li>
                @for (int i = Model.TotalPageNo - 3; i <= Model.TotalPageNo; i++)
                {
                    if (i == Model.CurrentPageNo)
                    {
                        <li class="page-item active">
                            <a class="page-link" href="javascript:void(0)">@i</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a @onclick="() => BudgetData(i)" class="page-link" href="javascript:void(0)">@i</a>
                        </li>
                    }
                }
            }
        }
        else if (secondDesign)
        {
            <li class="page-item">
                <a @onclick="() => BudgetData(1)" class="page-link" href="javascript:void(0)">1</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="javascript:void(0)">...</a>
            </li>
            @for (int i = Model.CurrentPageNo - 2; i <= Model.CurrentPageNo + 2; i++)
            {
                if (i == Model.CurrentPageNo)
                {
                    <li class="page-item active">
                        <a class="page-link" href="javascript:void(0)">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a @onclick="() => BudgetData(1)" class="page-link" href="javascript:void(0)">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a class="page-link" href="javascript:void(0)">...</a>
            </li>
            <li class="page-item">
                <a @onclick="() => BudgetData(Model.TotalPageNo)" class="page-link" href="javascript:void(0)">@Model.TotalPageNo</a>
            </li>
        }
        <li class="page-item @(Model.CurrentPageNo == Model.TotalPageNo ? "disabled" : "")">
            <a @onclick="() => BudgetData(Model.CurrentPageNo + 1)" class="page-link" href="javascript:void(0)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>
@code {
    [Parameter]
    public PaginationResponseDataModel Model { get; set; }

    [Parameter]
    public EventCallback<int> OnPageClick { get; set; }

    async Task BudgetData(int pageNo)
    {
        Console.WriteLine($"PaginationPage : {pageNo}");
        await OnPageClick.InvokeAsync(pageNo);
    }
}
